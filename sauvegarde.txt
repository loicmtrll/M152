
  // Lance les test a l'appuie du boutton.
  if ($btnValider) 
  {
    // Filtrage des champs.
    $description = filter_input(INPUT_POST,"description",FILTER_SANITIZE_STRING);

    // Vérifications pour le mot de passe.
    if(!$description || $description == "")
    {
        $erreur["description"] = "<p class='text-danger'>Veuillez rentrer une description. <br></p>";
        $msg .= $erreur["description"];
    } 

    // Vérifie si au moins une image a été envoyée au formulaire.
    $testFiles = $_FILES['photo']['name'];
    if ($testFiles[0] == "") 
    {
      $erreur["imageVide"] = "<p class='text-danger'>Vous devez envoyer au moins une image. <br></p>";
      $msg .= $erreur["imageVide"];
    }

    // Si il n'y a aucune erreur, passe a la suite en executant le code ci-dessous.
    if(count($erreur) == 0)
    {
      $countfiles = count($_FILES['photo']['name']);              // Nombres d'images recuperé par l'input files
      $dossier = 'img/upload/';                                   // Chemin ou seront uplaod les images
      $taille_maxi = 3000000;                                     // Tailles max en octet
      $extensions = array('.png', '.gif', '.jpg', '.jpeg');       // Formats acceptés

      $idPost = ajouterPost($description);
      // Boucle qui va se repeter autant de fois que le nombre d'image envoyer dans l'input
      for($i=0;$i<$countfiles;$i++)
      {
        $filename = $_FILES['photo']['name'][$i];                 // Nom de l'image
        $extension = strrchr($filename, '.');                     // Extension de l'image
        $taille = filesize($_FILES['photo']['tmp_name'][$i]);     // Taille en octet de l'image 


        $arr = explode(".", $filename, 2);
        $nomFichierSansLeType = $arr[0]  . $idPost;               // nom de l'image sans le type
        $fichier = $nomFichierSansLeType . $extension;            // Nom du fichier

        // Vérifie si l'extension est bonne.
        if(!in_array($extension, $extensions)) 
        {
            $erreurImg = "<p class='text-danger'>Le fichier $filename doit être de type png, gif, jpg, jpeg <br></p>";
            $msg .= $erreurImg;
        }

        // Vérifie si la taille de l'image n'est pas trop haute.
        if($taille>$taille_maxi)
        {
            $erreurImg = "<p class='text-danger'>Le fichier $filename est trop gros. <br></p>";
            $msg .= $erreurImg;
        }

        // Passer a la suite si il n'y a aucune erreurs.
        if(!isset($erreurImg))
        {
            //Remplacer tout les accents.
            $fichier = strtr($fichier, 'ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïðòóôõöùúûüýÿ', 'AAAAAACEEEEIIIIOOOOOUUUUYaaaaaaceeeeiiiioooooouuuuyy');
            $fichier = preg_replace('/([^.a-z0-9]+)/i', '-', $fichier);

            // Uploads les fichier si la fonction renvoie TRUE.
            if(move_uploaded_file($_FILES['photo']['tmp_name'][$i], $dossier . $fichier)) 
            {          
                $msg .= "<p class='text-success'>L'upload de l'image $filename à été effectué avec succès ! <br></p>";
                ajouterMedia($nomFichierSansLeType,$extension,$idPost);
                
                
            }

            // Affiche les erreurs si elle renvoie FALSE.
            else 
            {      
                $msg .= "<p class='text-danger'>Echec de l'upload ! pour : $filename <br></p>";
            }
        }

        // Supprime les erreurs d'upload si il y en a eu et passe a la prochaine image.
        else
        {
            unset($erreurImg);
        }
      }
    }

    // Affiche un popup d'information a la fin des tests.
    $afficherPopUp = true;
  }